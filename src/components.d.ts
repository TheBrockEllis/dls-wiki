/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import 'ionicons';
import '@ionic/core';

import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';
import {
  EventEmitter,
} from '@stencil/core';

declare global {
  interface HTMLAppHomeElement extends HTMLStencilElement {
    'history': RouterHistory;
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLAppPageElement extends HTMLStencilElement {
    'history': RouterHistory;
    'match': MatchResults;
  }
  var HTMLAppPageElement: {
    prototype: HTMLAppPageElement;
    new (): HTMLAppPageElement;
  };
  interface HTMLElementTagNameMap {
    'app-page': HTMLAppPageElement;
  }
  interface ElementTagNameMap {
    'app-page': HTMLAppPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-page': JSXElements.AppPageAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPageAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
      'match'?: MatchResults;
    }
  }
}


declare global {
  interface HTMLDlsButtonElement extends HTMLStencilElement {
    'history': RouterHistory;
    'page': any;
  }
  var HTMLDlsButtonElement: {
    prototype: HTMLDlsButtonElement;
    new (): HTMLDlsButtonElement;
  };
  interface HTMLElementTagNameMap {
    'dls-button': HTMLDlsButtonElement;
  }
  interface ElementTagNameMap {
    'dls-button': HTMLDlsButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'dls-button': JSXElements.DlsButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface DlsButtonAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
      'page'?: any;
    }
  }
}


declare global {
  interface HTMLDlsPodcastElement extends HTMLStencilElement {
    'date': Date;
    'history': RouterHistory;
    'podcasts': any[];
  }
  var HTMLDlsPodcastElement: {
    prototype: HTMLDlsPodcastElement;
    new (): HTMLDlsPodcastElement;
  };
  interface HTMLElementTagNameMap {
    'dls-podcast': HTMLDlsPodcastElement;
  }
  interface ElementTagNameMap {
    'dls-podcast': HTMLDlsPodcastElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'dls-podcast': JSXElements.DlsPodcastAttributes;
    }
  }
  namespace JSXElements {
    export interface DlsPodcastAttributes extends HTMLAttributes {
      'date'?: Date;
      'history'?: RouterHistory;
      'podcasts'?: any[];
    }
  }
}


declare global {
  interface HTMLDlsShowlogElement extends HTMLStencilElement {
    'history': RouterHistory;
  }
  var HTMLDlsShowlogElement: {
    prototype: HTMLDlsShowlogElement;
    new (): HTMLDlsShowlogElement;
  };
  interface HTMLElementTagNameMap {
    'dls-showlog': HTMLDlsShowlogElement;
  }
  interface ElementTagNameMap {
    'dls-showlog': HTMLDlsShowlogElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'dls-showlog': JSXElements.DlsShowlogAttributes;
    }
  }
  namespace JSXElements {
    export interface DlsShowlogAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLDlsSoundboardElement extends HTMLStencilElement {
    'history': RouterHistory;
    'navigator': any;
  }
  var HTMLDlsSoundboardElement: {
    prototype: HTMLDlsSoundboardElement;
    new (): HTMLDlsSoundboardElement;
  };
  interface HTMLElementTagNameMap {
    'dls-soundboard': HTMLDlsSoundboardElement;
  }
  interface ElementTagNameMap {
    'dls-soundboard': HTMLDlsSoundboardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'dls-soundboard': JSXElements.DlsSoundboardAttributes;
    }
  }
  namespace JSXElements {
    export interface DlsSoundboardAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
      'navigator'?: any;
    }
  }
}


declare global {
  interface HTMLDlsTimelineElement extends HTMLStencilElement {
    'history': RouterHistory;
  }
  var HTMLDlsTimelineElement: {
    prototype: HTMLDlsTimelineElement;
    new (): HTMLDlsTimelineElement;
  };
  interface HTMLElementTagNameMap {
    'dls-timeline': HTMLDlsTimelineElement;
  }
  interface ElementTagNameMap {
    'dls-timeline': HTMLDlsTimelineElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'dls-timeline': JSXElements.DlsTimelineAttributes;
    }
  }
  namespace JSXElements {
    export interface DlsTimelineAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLDlsTwitterElement extends HTMLStencilElement {
    'history': RouterHistory;
  }
  var HTMLDlsTwitterElement: {
    prototype: HTMLDlsTwitterElement;
    new (): HTMLDlsTwitterElement;
  };
  interface HTMLElementTagNameMap {
    'dls-twitter': HTMLDlsTwitterElement;
  }
  interface ElementTagNameMap {
    'dls-twitter': HTMLDlsTwitterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'dls-twitter': JSXElements.DlsTwitterAttributes;
    }
  }
  namespace JSXElements {
    export interface DlsTwitterAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLLazyImgElement extends HTMLStencilElement {
    'alt': string;
    'src': string;
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lazy-img': JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      'alt'?: string;
      'onLazyImgloaded'?: (event: CustomEvent<HTMLImageElement>) => void;
      'src'?: string;
    }
  }
}


declare global {
  interface HTMLMyAppElement extends HTMLStencilElement {

  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
